/* esm.sh - esbuild bundle(micromark-factory-mdx-expression@1.0.6) es2022 production */import{markdownLineEnding as U}from"/cdn/v99/micromark-util-character@1.1.0/es2022/micromark-util-character.js";import{factorySpace as I}from"/cdn/v99/micromark-factory-space@1.0.0/es2022/micromark-factory-space.js";import{positionFromEstree as E}from"/cdn/v99/unist-util-position-from-estree@1.1.1/es2022/unist-util-position-from-estree.js";import{VFileMessage as s}from"/cdn/v99/vfile-message@3.1.3/es2022/vfile-message.js";import{eventsToAcorn as O}from"/cdn/v99/micromark-util-events-to-acorn@1.2.0/es2022/micromark-util-events-to-acorn.js";function D(e,b,u,o,l,d,P,j,c,M,y,v){let t=this,z=this.events.length+3,a=this.events[this.events.length-1],S=a&&a[1].type==="linePrefix"?a[2].sliceSerialize(a[1],!0).length:0,B=S?S+1:0,w=1,g,h;return C;function C(n){return e.enter(u),e.enter(o),e.consume(n),e.exit(o),g=t.now(),m}function m(n){if(n===null)throw h||new s("Unexpected end of file in expression, expected a corresponding closing brace for `{`",t.now(),"micromark-extension-mdx-expression:unexpected-eof");if(n===125)return F(n);if(U(n)){e.enter("lineEnding"),e.consume(n),e.exit("lineEnding");let x=v?v+4-t.now().column:0,r=Math.max(B,x);return r?I(e,m,"linePrefix",r):m}let i=t.now();if(i.line!==g.line&&!y&&t.parser.lazy[i.line])throw new s("Unexpected end of file in expression, expected a corresponding closing brace for `{`",t.now(),"micromark-extension-mdx-expression:unexpected-eof");return e.enter(l),p(n)}function p(n){return n===null||n===125||U(n)?(e.exit(l),m(n)):n===123&&!d?(e.consume(n),w++,p):(e.consume(n),p)}function F(n){if(w--,!d)return w?(e.enter(l),e.consume(n),p):(e.enter(o),e.consume(n),e.exit(o),e.exit(u),b);let i=O(t.events.slice(z),{acorn:d,acornOptions:P,start:g,expression:!0,allowEmpty:M,prefix:c?"({":"",suffix:c?"})":""}),x=i.estree;if(c&&x){let r=x.body[0];if(r.type!=="ExpressionStatement"||r.expression.type!=="ObjectExpression")throw new s("Unexpected `"+r.type+"` in code: expected an object spread (`{...spread}`)",E(r).start,"micromark-extension-mdx-expression:non-spread");if(r.expression.properties[1])throw new s("Unexpected extra content in spread: only a single spread is supported",E(r.expression.properties[1]).start,"micromark-extension-mdx-expression:spread-extra");if(r.expression.properties[0]&&r.expression.properties[0].type!=="SpreadElement")throw new s("Unexpected `"+r.expression.properties[0].type+"` in code: only spread elements are supported",E(r.expression.properties[0]).start,"micromark-extension-mdx-expression:non-spread")}if(i.error){if(h=new s("Could not parse expression with acorn: "+i.error.message,{line:i.error.loc.line,column:i.error.loc.column+1,offset:i.error.pos},"micromark-extension-mdx-expression:acorn"),n!==null&&i.swallow)return e.enter(l),e.consume(n),p;throw h}return e.enter(o),e.consume(n),e.exit(o),Object.assign(e.exit(u),j?{estree:x}:void 0),b}}export{D as factoryMdxExpression};