/* esm.sh - esbuild bundle(estree-walker@3.0.1) es2022 production */var c=class{constructor(){this.should_skip=!1,this.should_remove=!1,this.replacement=null,this.context={skip:()=>this.should_skip=!0,remove:()=>this.should_remove=!0,replace:e=>this.replacement=e}}replace(e,s,l,h){e&&(l!==null?e[s][l]=h:e[s]=h)}remove(e,s,l){e&&(l!==null?e[s].splice(l,1):delete e[s])}};var u=class extends c{constructor(e,s){super(),this.enter=e,this.leave=s}visit(e,s,l,h){if(e){if(this.enter){let r=this.should_skip,t=this.should_remove,i=this.replacement;this.should_skip=!1,this.should_remove=!1,this.replacement=null,this.enter.call(this.context,e,s,l,h),this.replacement&&(e=this.replacement,this.replace(s,l,h,e)),this.should_remove&&this.remove(s,l,h);let m=this.should_skip,a=this.should_remove;if(this.should_skip=r,this.should_remove=t,this.replacement=i,m)return e;if(a)return null}for(let r in e){let t=e[r];if(typeof t=="object")if(Array.isArray(t))for(let i=0;i<t.length;i+=1)t[i]!==null&&typeof t[i].type=="string"&&(this.visit(t[i],e,r,i)||i--);else t!==null&&typeof t.type=="string"&&this.visit(t,e,r,null)}if(this.leave){let r=this.replacement,t=this.should_remove;this.replacement=null,this.should_remove=!1,this.leave.call(this.context,e,s,l,h),this.replacement&&(e=this.replacement,this.replace(s,l,h,e)),this.should_remove&&this.remove(s,l,h);let i=this.should_remove;if(this.replacement=r,this.should_remove=t,i)return null}}return e}};var n=class extends c{constructor(e,s){super(),this.enter=e,this.leave=s}async visit(e,s,l,h){if(e){if(this.enter){let r=this.should_skip,t=this.should_remove,i=this.replacement;this.should_skip=!1,this.should_remove=!1,this.replacement=null,await this.enter.call(this.context,e,s,l,h),this.replacement&&(e=this.replacement,this.replace(s,l,h,e)),this.should_remove&&this.remove(s,l,h);let m=this.should_skip,a=this.should_remove;if(this.should_skip=r,this.should_remove=t,this.replacement=i,m)return e;if(a)return null}for(let r in e){let t=e[r];if(typeof t=="object")if(Array.isArray(t))for(let i=0;i<t.length;i+=1)t[i]!==null&&typeof t[i].type=="string"&&((await this.visit(t[i],e,r,i))||i--);else t!==null&&typeof t.type=="string"&&(await this.visit(t,e,r,null))}if(this.leave){let r=this.replacement,t=this.should_remove;this.replacement=null,this.should_remove=!1,await this.leave.call(this.context,e,s,l,h),this.replacement&&(e=this.replacement,this.replace(s,l,h,e)),this.should_remove&&this.remove(s,l,h);let i=this.should_remove;if(this.replacement=r,this.should_remove=t,i)return null}}return e}};function w(o,{enter:e,leave:s}){return new u(e,s).visit(o,null)}async function g(o,{enter:e,leave:s}){return await new n(e,s).visit(o,null)}export{g as asyncWalk,w as walk};