/* esm.sh - esbuild bundle(mdast-util-mdx-expression@1.3.1) es2022 production */var d={enter:{mdxFlowExpression:o,mdxTextExpression:a},exit:{mdxFlowExpression:x,mdxFlowExpressionChunk:r,mdxTextExpression:x,mdxTextExpressionChunk:r}},p={handlers:{mdxFlowExpression:i,mdxTextExpression:i},unsafe:[{character:"{",inConstruct:["phrasing"]},{atBreak:!0,character:"{"}]};function o(e){this.enter({type:"mdxFlowExpression",value:""},e),this.buffer()}function a(e){this.enter({type:"mdxTextExpression",value:""},e),this.buffer()}function x(e){let s=this.resume(),t=e.estree,n=this.exit(e);n.value=s,t&&(n.data={estree:t})}function r(e){this.config.enter.data.call(this,e),this.config.exit.data.call(this,e)}function i(e){let s=e.value||"";return"{"+s+"}"}export{d as mdxExpressionFromMarkdown,p as mdxExpressionToMarkdown};