/* esm.sh - esbuild bundle(micromark-extension-mdx-expression@1.0.3) es2022 production */import{factoryMdxExpression as u}from"/cdn/v99/micromark-factory-mdx-expression@1.0.6/es2022/micromark-factory-mdx-expression.js";import{factorySpace as E}from"/cdn/v99/micromark-factory-space@1.0.0/es2022/micromark-factory-space.js";import{markdownLineEnding as w}from"/cdn/v99/micromark-util-character@1.1.0/es2022/micromark-util-character.js";function k(e={}){let x=e.addResult,t=e.acorn,l=e.spread,n=e.allowEmpty,s;if(n==null&&(n=!0),t){if(!t.parseExpressionAt)throw new Error("Expected a proper `acorn` instance passed in as `options.acorn`");s=Object.assign({ecmaVersion:2020,sourceType:"module"},e.acornOptions)}else if(e.acornOptions||e.addResult)throw new Error("Expected an `acorn` instance passed in as `options.acorn`");return{flow:{[123]:{tokenize:d,concrete:!0}},text:{[123]:{tokenize:m}}};function d(o,i,a){let c=this;return p;function p(r){return u.call(c,o,E(o,f,"whitespace"),"mdxFlowExpression","mdxFlowExpressionMarker","mdxFlowExpressionChunk",t,s,x,l,n)(r)}function f(r){return r===null||w(r)?i(r):a(r)}}function m(o,i){let a=this;return c;function c(p){return u.call(a,o,i,"mdxTextExpression","mdxTextExpressionMarker","mdxTextExpressionChunk",t,s,x,l,n,!0)(p)}}}export{k as mdxExpression};